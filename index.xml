<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Jay Janssen's MySQL and Infrastructure</title><link>http://blog.jayjanssen.net/</link><description>MySQL and Infrastructure</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 21 Apr 2023 08:43:50 -0400</lastBuildDate><atom:link href="http://blog.jayjanssen.net/index.xml" rel="self" type="application/rss+xml"/><item><title>Is Xtrabackup's --safe-slave-backup still relevant?</title><link>http://blog.jayjanssen.net/posts/2023/04/is-xtrabackups--safe-slave-backup-still-relevant/</link><pubDate>Fri, 21 Apr 2023 08:43:50 -0400</pubDate><author>Jay Janssen</author><guid>http://blog.jayjanssen.net/posts/2023/04/is-xtrabackups--safe-slave-backup-still-relevant/</guid><description><![CDATA[<p>Like a lot of people, we&rsquo;re going through MySQL 8 upgrades and finding the sorts of things that change from major version to major version.  One of these things that changed behavior in MySQL 8 is in Xtrabackup.</p>
<p>Specifically, and for time immemorial, we have used the <code>--safe-slave-backup</code> in Xtrabackup<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>.  We take Xtrabackups from our replicas, so it sounds like a setting everyone can agree with, right?</p>
<div class="details admonition note open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw" aria-hidden="true"></i>TL;DR<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><ul>
<li>If you use Xtrabackup with <code>--safe-slave-backup</code> on a MySQL 8 replica, it will stop replication for the entire backup when it did not do so on 5.7</li>
<li>If you don&rsquo;t know what <code>--safe-slave-backup</code> really does and you use it, you should check it out.  Hint: You probably don&rsquo;t need it.</li>
</ul>
</div>
        </div>
    </div>
<h2 id="differences-between-57-and-80-behavior">Differences between 5.7 and 8.0 behavior</h2>
<p>Take a close look at the differences in the Xtrabackup documentation between 8.0 and 2.3 (the Xtrabackup version that supported MySQL 5.7):</p>
<ul>
<li><a href="https://docs.percona.com/percona-xtrabackup/2.4/innobackupex/replication_ibk.html?h=replication&#43;envir#innobackupex-safe-slave-backup" target="_blank" rel="noopener noreffer ">2.3 &ndash;safe-slave-backup</a></li>
<li><a href="https://docs.percona.com/percona-xtrabackup/8.0/xtrabackup_bin/replication.html#the-safe-slave-backup-option" target="_blank" rel="noopener noreffer ">8.0 &ndash;safe-slave-backup</a></li>
</ul>
<p>As one might expect from an option called <code>--safe-slave-backup</code><sup id="fnref1:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>, both pages state:
<div class="details admonition quote open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-quote-right fa-fw" aria-hidden="true"></i>Quote<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">Using this option is always recommended when taking backups from a replica server.</div>
        </div>
    </div></p>
<p>However, looking closely at the differences, Xtrabackup 8.0 doc states:</p>
<div class="details admonition quote open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-quote-right fa-fw" aria-hidden="true"></i>Quote<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">As of Percona XtraBackup 8.0.22-15.0, using a safe-slave-backup option stops the SQL replica thread before copying the InnoDB files.</div>
        </div>
    </div>
<div class="details admonition warning open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-exclamation-triangle fa-fw" aria-hidden="true"></i>Warning<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">What may not be clear here is that copying InnoDB files is essentially the <em>entirety</em> of the Xtrabackup.  In 5.7, this was only done <em>after</em> the Innodb files were copied when other non-transaction tables were copied.</div>
        </div>
    </div>
<p>We did not notice this behavior change until we started getting replication stopped alerts on our backup replicas.</p>
<p>If you read the manual, it turns out this option is specifically for <em>temporary tables</em>.</p>
<h2 id="which-temporary-tables">Which temporary tables?</h2>
<p>First, we need to distinguish between <a href="https://dev.mysql.com/doc/refman/8.0/en/internal-temporary-tables.html" target="_blank" rel="noopener noreffer "><em>internal</em> temporary tables</a> and (what I like to call) <em>explicit</em> temporary tables, or those created explicity by clients with the <a href="https://dev.mysql.com/doc/refman/8.0/en/create-temporary-table.html" target="_blank" rel="noopener noreffer "><code>CREATE TEMPORARY TABLES</code> statement</a>.</p>
<h2 id="why-do-we-care-about-explicit-temporary-tables-and-replication">Why do we care about explicit temporary tables and replication?</h2>
<p>Why do we care about explicit temporary tables on replicas?  It&rsquo;s complicated, so I&rsquo;ll let the 5.7 MySQL manual explain: <a href="https://dev.mysql.com/doc/refman/5.7/en/replication-features-temptables.html" target="_blank" rel="noopener noreffer ">https://dev.mysql.com/doc/refman/5.7/en/replication-features-temptables.html</a>.  Got all that?</p>
<p><strong>TL;DR:</strong> <code>STATEMENT</code> based replication</p>
<h2 id="why-is-xtrabackup-8-stopping-replication-for-the-entire-backup">Why is Xtrabackup 8 stopping replication for the entire backup?</h2>
<p>Ok, but why the change iin Xtrabackup 8?  I&rsquo;m actually not sure.  At first I thought it was because explicit temporary tables were still defaulting MyISAM in 5.7, but that isn&rsquo;t true:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="n">Welcome</span><span class="w"> </span><span class="k">to</span><span class="w"> </span><span class="n">the</span><span class="w"> </span><span class="n">MySQL</span><span class="w"> </span><span class="n">monitor</span><span class="p">.</span><span class="w">  </span><span class="n">Commands</span><span class="w"> </span><span class="n">end</span><span class="w"> </span><span class="k">with</span><span class="w"> </span><span class="p">;</span><span class="w"> </span><span class="k">or</span><span class="w"> </span><span class="err">\</span><span class="n">g</span><span class="p">.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">Your</span><span class="w"> </span><span class="n">MySQL</span><span class="w"> </span><span class="n">connection</span><span class="w"> </span><span class="n">id</span><span class="w"> </span><span class="k">is</span><span class="w"> </span><span class="mi">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">Server</span><span class="w"> </span><span class="n">version</span><span class="p">:</span><span class="w"> </span><span class="mi">5</span><span class="p">.</span><span class="mi">7</span><span class="p">.</span><span class="mi">41</span><span class="o">-</span><span class="n">log</span><span class="w"> </span><span class="n">MySQL</span><span class="w"> </span><span class="n">Community</span><span class="w"> </span><span class="nf">Server</span><span class="w"> </span><span class="p">(</span><span class="n">GPL</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nf">Copyright</span><span class="w"> </span><span class="p">(</span><span class="n">c</span><span class="p">)</span><span class="w"> </span><span class="mi">2000</span><span class="p">,</span><span class="w"> </span><span class="mi">2023</span><span class="p">,</span><span class="w"> </span><span class="n">Oracle</span><span class="w"> </span><span class="k">and</span><span class="o">/</span><span class="k">or</span><span class="w"> </span><span class="n">its</span><span class="w"> </span><span class="n">affiliates</span><span class="p">.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">Oracle</span><span class="w"> </span><span class="k">is</span><span class="w"> </span><span class="n">a</span><span class="w"> </span><span class="n">registered</span><span class="w"> </span><span class="n">trademark</span><span class="w"> </span><span class="n">of</span><span class="w"> </span><span class="n">Oracle</span><span class="w"> </span><span class="n">Corporation</span><span class="w"> </span><span class="k">and</span><span class="o">/</span><span class="k">or</span><span class="w"> </span><span class="n">its</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">affiliates</span><span class="p">.</span><span class="w"> </span><span class="n">Other</span><span class="w"> </span><span class="n">names</span><span class="w"> </span><span class="n">may</span><span class="w"> </span><span class="n">be</span><span class="w"> </span><span class="n">trademarks</span><span class="w"> </span><span class="n">of</span><span class="w"> </span><span class="n">their</span><span class="w"> </span><span class="n">respective</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">owners</span><span class="p">.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">Type</span><span class="w"> </span><span class="s1">&#39;help;&#39;</span><span class="w"> </span><span class="k">or</span><span class="w"> </span><span class="s1">&#39;\h&#39;</span><span class="w"> </span><span class="k">for</span><span class="w"> </span><span class="n">help</span><span class="p">.</span><span class="w"> </span><span class="n">Type</span><span class="w"> </span><span class="s1">&#39;\c&#39;</span><span class="w"> </span><span class="k">to</span><span class="w"> </span><span class="n">clear</span><span class="w"> </span><span class="n">the</span><span class="w"> </span><span class="n">current</span><span class="w"> </span><span class="n">input</span><span class="w"> </span><span class="n">statement</span><span class="p">.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">mysql</span><span class="o">&gt;</span><span class="w"> </span><span class="k">create</span><span class="w"> </span><span class="k">schema</span><span class="w"> </span><span class="n">test</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">Query</span><span class="w"> </span><span class="n">OK</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="n">row</span><span class="w"> </span><span class="nf">affected</span><span class="w"> </span><span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">02</span><span class="w"> </span><span class="n">sec</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">mysql</span><span class="o">&gt;</span><span class="w"> </span><span class="k">use</span><span class="w"> </span><span class="n">test</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">Database</span><span class="w"> </span><span class="n">changed</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">mysql</span><span class="o">&gt;</span><span class="w"> </span><span class="k">create</span><span class="w"> </span><span class="n">temporary</span><span class="w"> </span><span class="k">table</span><span class="w"> </span><span class="nf">test</span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="k">primary</span><span class="w"> </span><span class="k">key</span><span class="p">);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">Query</span><span class="w"> </span><span class="n">OK</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="w"> </span><span class="n">rows</span><span class="w"> </span><span class="nf">affected</span><span class="w"> </span><span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">03</span><span class="w"> </span><span class="n">sec</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">mysql</span><span class="o">&gt;</span><span class="w"> </span><span class="k">show</span><span class="w"> </span><span class="k">create</span><span class="w"> </span><span class="k">table</span><span class="w"> </span><span class="n">test</span><span class="err">\</span><span class="n">G</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">***************************</span><span class="w"> </span><span class="mi">1</span><span class="p">.</span><span class="w"> </span><span class="n">row</span><span class="w"> </span><span class="o">***************************</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">       </span><span class="k">Table</span><span class="p">:</span><span class="w"> </span><span class="n">test</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">Create</span><span class="w"> </span><span class="k">Table</span><span class="p">:</span><span class="w"> </span><span class="k">CREATE</span><span class="w"> </span><span class="n">TEMPORARY</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="o">`</span><span class="n">test</span><span class="o">`</span><span class="w"> </span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="o">`</span><span class="n">i</span><span class="o">`</span><span class="w"> </span><span class="kt">int</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="no">NULL</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="k">PRIMARY</span><span class="w"> </span><span class="k">KEY</span><span class="w"> </span><span class="p">(</span><span class="o">`</span><span class="n">i</span><span class="o">`</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">)</span><span class="w"> </span><span class="kp">ENGINE</span><span class="o">=</span><span class="n">InnoDB</span><span class="w"> </span><span class="k">DEFAULT</span><span class="w"> </span><span class="kp">CHARSET</span><span class="o">=</span><span class="n">latin1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">1</span><span class="w"> </span><span class="n">row</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="kt">set</span><span class="w"> </span><span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">01</span><span class="w"> </span><span class="n">sec</span><span class="p">)</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>though you can still tell it to use MyISAM:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="n">mysql</span><span class="o">&gt;</span><span class="w"> </span><span class="k">create</span><span class="w"> </span><span class="n">temporary</span><span class="w"> </span><span class="k">table</span><span class="w"> </span><span class="nf">testmyisam</span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="kt">int</span><span class="w"> </span><span class="k">primary</span><span class="w"> </span><span class="k">key</span><span class="p">)</span><span class="w"> </span><span class="kp">engine</span><span class="o">=</span><span class="n">myisam</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">Query</span><span class="w"> </span><span class="n">OK</span><span class="p">,</span><span class="w"> </span><span class="mi">0</span><span class="w"> </span><span class="n">rows</span><span class="w"> </span><span class="nf">affected</span><span class="w"> </span><span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">02</span><span class="w"> </span><span class="n">sec</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">mysql</span><span class="o">&gt;</span><span class="w"> </span><span class="k">show</span><span class="w"> </span><span class="k">create</span><span class="w"> </span><span class="k">table</span><span class="w"> </span><span class="n">testmyisam</span><span class="err">\</span><span class="n">G</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="o">***************************</span><span class="w"> </span><span class="mi">1</span><span class="p">.</span><span class="w"> </span><span class="n">row</span><span class="w"> </span><span class="o">***************************</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">       </span><span class="k">Table</span><span class="p">:</span><span class="w"> </span><span class="n">testmyisam</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">Create</span><span class="w"> </span><span class="k">Table</span><span class="p">:</span><span class="w"> </span><span class="k">CREATE</span><span class="w"> </span><span class="n">TEMPORARY</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="o">`</span><span class="n">testmyisam</span><span class="o">`</span><span class="w"> </span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="o">`</span><span class="n">i</span><span class="o">`</span><span class="w"> </span><span class="kt">int</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="no">NULL</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="k">PRIMARY</span><span class="w"> </span><span class="k">KEY</span><span class="w"> </span><span class="p">(</span><span class="o">`</span><span class="n">i</span><span class="o">`</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">)</span><span class="w"> </span><span class="kp">ENGINE</span><span class="o">=</span><span class="n">MyISAM</span><span class="w"> </span><span class="k">DEFAULT</span><span class="w"> </span><span class="kp">CHARSET</span><span class="o">=</span><span class="n">latin1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="mi">1</span><span class="w"> </span><span class="n">row</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="kt">set</span><span class="w"> </span><span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">01</span><span class="w"> </span><span class="n">sec</span><span class="p">)</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>That behavior hasn&rsquo;t changed on 8.0.  So is the <code>--safe-slave-backup</code> even working as intended on 5.7?  I&rsquo;m not sure.</p>
<h2 id="estoeric-use-cases-and-binlog-formats">Estoeric use cases and binlog formats</h2>
<p>But is this problem even still relevant?</p>
<p>Raise your hands if you use <code>CREATE TEMPORARY TABLES</code>.  Now raise your hand if you knew explicit temporary tables even exist.  I bet the majority of people writing queries for MySQL are <em>not</em> aware of them, much less use them.</p>
<p>Raise your hands if you still use <code>STATEMENT</code> or <code>MIXED</code> replication.  I&rsquo;m sure some do, but the default has been <code>ROW</code> for a very long time.  Now raise your hands if you have application code that explicitly sets the <code>SESSION.binlog_format</code>.  I&rsquo;m sure it&rsquo;s out there, but it can&rsquo;t be very common.</p>
<p>This is not a fool-proof argument.  Some client somewhere can still explicitly set the session <code>binlog_format=STATEMENT</code> and use temporary tables, right?</p>
<p>Reading the upgrading to MySQL 8 page:
<div class="details admonition quote open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-quote-right fa-fw" aria-hidden="true"></i>Quote<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">SET @@SESSION.binlog_format cannot be used if the session has any open temporary tables.  <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-disaster-recovery.html#aurora-global-database-failover" target="_blank" rel="noopener noreffer ">source</a></div>
        </div>
    </div></p>
<p>This is helpful to close the gap, but it only seems to do so partially:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Welcome to the MySQL monitor.  Commands end with ; or \g.
</span></span><span class="line"><span class="cl">Your MySQL connection id is 10474
</span></span><span class="line"><span class="cl">Server version: 8.0.32 MySQL Community Server - GPL
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Copyright (c) 2000, 2023, Oracle and/or its affiliates.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Oracle is a registered trademark of Oracle Corporation and/or its
</span></span><span class="line"><span class="cl">affiliates. Other names may be trademarks of their respective
</span></span><span class="line"><span class="cl">owners.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">mysql&gt; use test;
</span></span><span class="line"><span class="cl">Reading table information for completion of table and column names
</span></span><span class="line"><span class="cl">You can turn off this feature to get a quicker startup with -A
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">mysql&gt; create temporary table temp(i int primary key);
</span></span><span class="line"><span class="cl">Query OK, 0 rows affected (0.00 sec)
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">mysql&gt; set @@session.binlog_format=statement;
</span></span><span class="line"><span class="cl">ERROR 3745 (HY000): Changing @@session.binlog_format is disallowed when the session has open temporary table(s). You could wait until these temporary table(s) are dropped and try again.
</span></span></code></pre></td></tr></table>
</div>
</div><p>That&rsquo;s great, but the opposite is not true:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">mysql&gt; set @@session.binlog_format=statement;
</span></span><span class="line"><span class="cl">Query OK, 0 rows affected (0.00 sec)
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">mysql&gt; select @@binlog_format;
</span></span><span class="line"><span class="cl">+-----------------+
</span></span><span class="line"><span class="cl">| @@binlog_format |
</span></span><span class="line"><span class="cl">+-----------------+
</span></span><span class="line"><span class="cl">| STATEMENT       |
</span></span><span class="line"><span class="cl">+-----------------+
</span></span><span class="line"><span class="cl">1 row in set (0.00 sec)
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">mysql&gt; create temporary table temp(i int primary key);
</span></span><span class="line"><span class="cl">Query OK, 0 rows affected (0.00 sec)
</span></span></code></pre></td></tr></table>
</div>
</div><p>I&rsquo;d honestly just rather have a server variable that totally disallows changing session <code>binlog_format</code>.</p>
<p>All that said, clients can still do bad things.  Are there clients out there that are doing BOTH:</p>
<ul>
<li>setting session <code>binlog_format</code> away from <code>ROW</code>?
<strong>AND</strong></li>
<li>using an explicit temporary table to stage data loading into permanent tables?</li>
</ul>
<p>I&rsquo;m sure there is, but how likely is it and it is worth Xtrabackup stopping your replica to take the backup?</p>
<h2 id="conclusion">Conclusion</h2>
<p>I don&rsquo;t fully understand why replication is stopped for the entire backup in <code>--safe-slave-backup</code> in in Xtrabackup 8 and not in 2.3, but I&rsquo;m not sure I need to know, I&rsquo;m turning it off.</p>
<p>It&rsquo;d be nice if the argument was better named (maybe: <code>--safe-explicit-replicated-temp-tables</code>) because I expect a lot of people setting up Xtrabackup are using it just based on the name alone and without any real understanding of what it is protecting against.</p>
<p>The gap that this solves is esoteric and an increasingly improbable case.  Is it possible by not using it I&rsquo;ll get some inconsistent backups, but stopping replication is just not an acceptable tradeoff at this point, at least for my purposes.</p>
<p>Interestingly, the Xtrabackup manual, in another spot, does call out that this setting is not needed for <code>ROW</code> replication:
<div class="details admonition quote open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-quote-right fa-fw" aria-hidden="true"></i>Quote<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">This option is implemented in order to deal with replicating temporary tables and isn’t necessary with Row-Based-Replication.  <a href="https://docs.percona.com/percona-xtrabackup/8.0/xtrabackup_bin/xbk_option_reference.html?h=replica&#43;backup#-safe-slave-backup" target="_blank" rel="noopener noreffer ">source</a></div>
        </div>
    </div>
This is partially just the Xtrabackup documentation being messy.  I&rsquo;ve heard they <a href="https://github.com/percona/pxb-docs" target="_blank" rel="noopener noreffer ">take PRs</a> if you&rsquo;re interested in fixing it.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>Note that this how the option is still in Xtrabackup, whereas I&rsquo;ll be using the newer term &lsquo;replica&rsquo; in this post.  I&rsquo;m not interested in any political debates, but I do find the term &lsquo;replica&rsquo; to be a clearer technical term.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a>&#160;<a href="#fnref1:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></description></item><item><title>RDS/Aurora IAM DB access with MySQL Shell</title><link>http://blog.jayjanssen.net/posts/2023/01/rds/aurora-iam-db-access-with-mysql-shell/</link><pubDate>Wed, 18 Jan 2023 08:08:38 -0500</pubDate><author>Jay Janssen</author><guid>http://blog.jayjanssen.net/posts/2023/01/rds/aurora-iam-db-access-with-mysql-shell/</guid><description><![CDATA[<p>As probably with anyone experimenting with <a href="https://dev.mysql.com/doc/refman/8.0/en/mysql-innodb-cluster-introduction.html" target="_blank" rel="noopener noreffer ">Innodb Cluster</a> and <a href="https://dev.mysql.comdoc/refman/8.0/en/" target="_blank" rel="noopener noreffer ">MySQL 8</a>, I&rsquo;ve spent a good deal of time with <a href="https://dev.mysql.com/doc/mysql-shell/8.0/en/" target="_blank" rel="noopener noreffer ">MySQL Shell</a>. I think for some old-timers MySQL Shell can initially come across as odd or difficult to understand.  Partially, I think it is because Shell offers a deluge of new features from:</p>
<ul>
<li><a href="https://dev.mysql.com/doc/mysql-shell/8.0/en/admin-api-sandboxes.html" target="_blank" rel="noopener noreffer ">managing local sandbox mysql instances</a></li>
<li><a href="https://dev.mysql.com/doc/mysql-shell/8.0/en/mysql-shell-active-language.html" target="_blank" rel="noopener noreffer ">3 different shell languages</a> (SQL, Javascript, and Python),</li>
<li><a href="https://dev.mysql.com/doc/mysql-shell/8.0/en/mysql-innodb-cluster.html" target="_blank" rel="noopener noreffer ">full management APIs for Innodb Cluster</a>,</li>
<li><a href="https://dev.mysql.com/doc/mysql-shell/8.0/en/mysql-shell-utilities-dump-instance-schema.html" target="_blank" rel="noopener noreffer ">parallel logical backup and restore utilities</a></li>
<li>and probably a whole lot more I haven&rsquo;t found yet.</li>
</ul>
<p>However, as I&rsquo;ve grown more comfortable with it, I can say that I do like it&rsquo;s possibilities.</p>
<h2 id="credential-storage">Credential storage</h2>
<p>One of Shell&rsquo;s features is <a href="https://dev.mysql.com/doc/mysql-shell/8.0/en/mysql-shell-pluggable-password-store.html" target="_blank" rel="noopener noreffer ">credential storage</a>.  By default, you will be prompted if you want to save the password you use to make a successful mysql connection.  This is fine as a convenience, but what is more interesting to me is the fact that the credential store is pluggable.  But how?</p>
<p>The interface for creating a credential storage plugin is not documented (as far as I can tell) in the manual.  The best (and only) documentation I could find on this is from <a href="https://dev.mysql.com/blog-archive/mysql-shell-8-0-12-storing-mysql-passwords-securely/" target="_blank" rel="noopener noreffer ">a MySQL dev blog from 2018</a>, see the lower section &lsquo;Custom credential helpers&rsquo;.</p>
<p>In a nutshell, a credential helper is just an executable that Shell runs on the same system you are running MySQL shell on.  The executable must implement 5 subcommands in the format <code>mysql-secret-store-yourname &lt;subcommand&gt;</code>.  Some subcommands take JSON on standard input, some emit JSON on standard output, some do both.  The executable should exit with a 0 on success or a 1 on failure for any of the comands.  The executable must be in a specific directory so that Shell can find it.  Simple enough, right?  The 5 subcommands are:</p>
<ul>
<li>store - stores credentials passed in</li>
<li>get - gets requested credentials</li>
<li>erase - drop specific credentials from the store</li>
<li>list - list all available credentials</li>
<li>version - output a version number</li>
</ul>
<h2 id="rds-and-aurora">RDS and Aurora</h2>
<p>How might I use the credential store?  Well, I am using RDS and Aurora more and more these days.  As a DBA type at my company, I need to access a wide variety of databases on AWS.  All of these have been setup to allow access to me as a DBA using a <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html" target="_blank" rel="noopener noreffer ">standard IAM user</a> using temporary IAM credentials.  The basic pre requisites are:</p>
<ol>
<li>I have credentials to access a given AWS account with a specific (and limited) role that allows me to generate IAM tokens</li>
<li>There is a <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.DBAccounts.html" target="_blank" rel="noopener noreffer ">mysql user setup connected to the role with a special plugin that associates it with IAM Authentication</a>.</li>
</ol>
<p>To get DB access I then:</p>
<ol>
<li>I use my AWS credentials to generate an IAM token</li>
<li>I setup an SSH tunnel to a place where I can access the network addresses of the DB</li>
<li>I run my mysql client more or less as normal, but I have to pass the IAM token as my password and use the SSH tunnel port for proper routing</li>
</ol>
<p>Using the AWS CLI and pseudo-bash, it would basically look like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">ssh -L &#34;$LOCAL_PORT:$ENDPOINT:$PORT&#34; $SSH_BASTION &amp;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">TOKEN=`aws rds generate-db-auth-token \
</span></span><span class="line"><span class="cl">  --hostname &#34;$ENDPOINT&#34; \
</span></span><span class="line"><span class="cl">  --port &#34;$PORT&#34;\ 
</span></span><span class="line"><span class="cl">  --profile &#34;$AWS_PROFILE&#34; \
</span></span><span class="line"><span class="cl">  --username &#34;$MYSQL_USER/IAM ROLE NAME&#34;`
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">mysql -u &#34;$MYSQL_USER/IAM ROLE NAME&#34; &#34;-p=$TOKEN&#34; -h 127.0.0.1 -p $LOCAL_PORT
</span></span></code></pre></td></tr></table>
</div>
</div><p>The token is good for 15 minutes, so I can cache the value for up to that long and subsequent connections can re-use it.  I can also re-use the SSH tunnel as long as it is open and connecting to the endpoint I want to use.</p>
<h2 id="meeting-the-two-in-the-middle">Meeting the two in the middle</h2>
<p>What if there was a way to connect these two systems?  I don&rsquo;t have a huge use case for storing static credentials, but what if I could write a Credential store that would handle fetching these temporary credentials for me?</p>
<p>It turns out that this is pretty easy. I can use any scripting or compiled language I want, provided I implement the needed interface and deal with Server URLs.</p>
<h2 id="turning-server-urls-into-what-we-need">Turning Server URLs into what we need</h2>
<p>One big obstacle however is that the interface provides a single key: Server URL. This is comprised of:</p>
<ul>
<li>user name</li>
<li>host name</li>
<li>port number</li>
</ul>
<p>Somehow I have to take that input and generate the following information so I can get my IAM token:</p>
<ul>
<li>the <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html" target="_blank" rel="noopener noreffer ">AWS config profile</a> name for the target DB&rsquo;s account.  Other AWS credential types could be used here instead.</li>
<li>the AWS region of the specific host I&rsquo;m connecting to</li>
<li>the RDS/Aurora endpoint I&rsquo;m connecting to (probably the hostname in the URL)</li>
<li>the IAM role to get a token for (I believe this has to be the mysql user name, but I could be mistaken here) (probably the user name in the URL)</li>
</ul>
<p>The solution for how to do this depends greatly on conventions very specific to my environment.  I ended up using a combination of parsing (i.e., to extract the region) and convention (my aws profile names and my RDS endpoints share common elements I can parse out).</p>
<p>How you might need to implement this is going to be specific to your setup as well, but it could be as simple as a local YAML / JSON config file you manage by hand.  For example:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">my-endpoint.us-east-1.rds.amazonaws.com</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">aws_profile</span><span class="p">:</span><span class="w"> </span><span class="l">profile_name</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">region</span><span class="p">:</span><span class="w"> </span><span class="l">us-east-1</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>Then you can take that profile and region and use it in your AWS API/CLI calls.  YMMV.</p>
<h2 id="the-interface">The interface</h2>
<p>But how should the interface behave?  This isn&rsquo;t necessarily what the good folks at Oracle expected when they designed credential helpers.  Let&rsquo;s talk about how we might handle each subcommand:</p>
<h3 id="get">get</h3>
<p>This is the meat and potatoes where we need to turn the requested ServerURL into an IAM token.  We convert the given Server URL into our needed AWS information and use either the AWS API or CLI to generate a token.</p>
<p>This method also handles caching the token for the 15 minutes.  If get is called again, we can use the cached version and skip all the AWS calls.  If the cache is expired, we fetch a new token as before.</p>
<p>This is a DB secret, so storage of this cache should be handled with some care.</p>
<h3 id="store">store</h3>
<p>No-op.  We don&rsquo;t actually store credentials with this helper, just retrieve.</p>
<h3 id="erase">erase</h3>
<p>Shell calls this for some reason the authentication fails.  I implemented this to drop the Server URL in my cache in case the token needed to be regenerated, e.g., the token expired but my cache TTL didn&rsquo;t work.</p>
<h3 id="list">list</h3>
<p>I simply list the Server URLs in my cache, i.e., my cache keys.  My cache doesn&rsquo;t actually drop entries until <code>get</code> is called, so this serves as a list of servers I&rsquo;ve successfully authenticated to in the past (remember failed auth calls <code>erase</code> on a key).  I don&rsquo;t know if I will keep it that way or not yet.</p>
<h3 id="version">version</h3>
<p>Just emit some version string for my handler</p>
<h2 id="handling-the-tunnel">Handling the tunnel</h2>
<p>It turns out that MySQL Shell already has <a href="https://dev.mysql.com/doc/mysql-shell/8.0/en/mysql-shell-connection-ssh.html" target="_blank" rel="noopener noreffer ">support for ssh tunneling</a>.  One less thing to worry about!  When I connect in the shell, I just give it the ssh bastion hostname I use above, and it does the rest.</p>
<h2 id="tying-it-together">Tying it together</h2>
<p>To use my credential helper, I have to have the executable be named <code>mysql-secret-store-&lt;myname&gt;</code> and it must be located in the same folder as the MySQL Shell binary.  I ended up writing my helper in Golang and when I have a new version I like to run <code>go install</code>, so I simply created a symlink from my go bin directory to where Homebrew installed Shell for me:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-sh" data-lang="sh"><span class="line"><span class="cl">ln -sf <span class="nv">$GOPATH</span>/bin/mysql-secret-store-rds /usr/local/mysql-shell/bin/mysql-secret-store-rds
</span></span></code></pre></td></tr></table>
</div>
</div><p>I have to then update my shell&rsquo;s config to use this helper</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">MySQL  JS &gt; \option --persist credentialStore.helper=&#39;rds&#39;
</span></span></code></pre></td></tr></table>
</div>
</div><p>You may or may not want this to be a permanent setting.  I am planning on making mine permanent, but extending my handler to be a transparent wrapper around another handler when I determine the Server URL is not RDS/Aurora.</p>
<p>Finally, I&rsquo;m ready to make a connection:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">MySQL  JS &gt; shell.connect({
</span></span><span class="line"><span class="cl"> 	ssh:&#34;bastion.host.name&#34;,
</span></span><span class="line"><span class="cl"> 	host:&#34;rds.endpoint.rds.amazonaws.com&#34;,
</span></span><span class="line"><span class="cl"> 	port: &#34;3306&#34;,
</span></span><span class="line"><span class="cl"> 	user: &#34;dba-user&#34;,
</span></span><span class="line"><span class="cl"> 	&#34;ssl-ca&#34;:&#34;/Users/jayj/.aws/rds-combined-ca-bundle.pem&#34;,
</span></span><span class="line"><span class="cl"> 	&#34;ssl-mode&#34;: &#34;VERIFY_CA&#34;
</span></span><span class="line"><span class="cl">})
</span></span><span class="line"><span class="cl">Creating a session to &#39;dba-user@rds.endpoint.rds.amazonaws.com:3306?ssl-ca=%2FUsers%2Fjayj%2F.aws%2Frds-combined-ca-bundle.pem&amp;ssl-mode=VERIFY_CA&#39;
</span></span><span class="line"><span class="cl">Opening SSH tunnel to bastion.host.name:22...
</span></span><span class="line"><span class="cl">Fetching schema names for auto-completion... Press ^C to stop.
</span></span><span class="line"><span class="cl">Closing old connection...
</span></span><span class="line"><span class="cl">Your MySQL connection id is 3692
</span></span><span class="line"><span class="cl">Server version: 5.7.12-log MySQL Community Server (GPL)
</span></span><span class="line"><span class="cl">No default schema selected; type \use &lt;schema&gt; to set one.
</span></span><span class="line"><span class="cl">&lt;ClassicSession:dba-user@rds.endpoint.rds.amazonaws.com:3306&gt;
</span></span><span class="line"><span class="cl"> MySQL  bastion.host.name &gt; rds.endpoint.rds.amazonaws.com:3306 ssl  JS &gt; \sql select @@aurora_version;
</span></span><span class="line"><span class="cl">+------------------+
</span></span><span class="line"><span class="cl">| @@aurora_version |
</span></span><span class="line"><span class="cl">+------------------+
</span></span><span class="line"><span class="cl">| 2.11.0           |
</span></span><span class="line"><span class="cl">+------------------+
</span></span><span class="line"><span class="cl">1 row in set (0.0445 sec)
</span></span></code></pre></td></tr></table>
</div>
</div><p>Success!</p>
<p>Like I said before, I can&rsquo;t really open source my version of this because of the environment specific stuff I do to get from a Server URL to the AWS metadata I need to lookup the token.  I will say that my resulting Go code is only about ~300 lines and most of that is some semi-ugly string parsing.  My hope with this post is it inpires you to consider other ways MySQL Shell&rsquo;s pluggable credential helper might be useful for you.</p>
]]></description></item><item><title>Aurora Global Failovers</title><link>http://blog.jayjanssen.net/posts/2022/12/aurora-global-failovers/</link><pubDate>Fri, 02 Dec 2022 08:17:57 -0500</pubDate><author>Jay Janssen</author><guid>http://blog.jayjanssen.net/posts/2022/12/aurora-global-failovers/</guid><description><![CDATA[<p>As part of an overwhelming stampede to migrate to the cloud, we are looking at using <em>AWS RDS Aurora MySQL</em> as a platform for some of our database clusters.  Lots of people have lots of opinions about Aurora, some of them are probably justified and some probably not.</p>
<p>I was interested in testing the high availability and disaster recovery capabilities of Aurora.  To be specific, I am testing Aurora v2 (though I expect v3 to work the same).  I am also specifically testing <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html" target="_blank" rel="noopener noreffer ">Aurora Global databases</a></p>
<h2 id="aurora-global-clusters">Aurora Global Clusters</h2>
<p>Aurora global databases are relatively simple to understand.  Perhaps the best way is to describe it in the order in which you would construct it:</p>
<ol>
<li>Create your first regional cluster</li>
<li>Create a global cluster from the first cluster</li>
<li>Create replica clusters in other regions</li>
</ol>
<figure><figcaption>
            <p>
                    <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html">Using Aurora global databases, User Guide for Aurora, AWS Documentation</a></p>
        </figcaption>
</figure>

<p>Only one cluster can take writes at a time, and it is designated as the <em>Primary cluster</em>.  The other cluster(s) are considered <em>Secondary</em>.  Replication across region is done by the Storage layer and <em>does not</em> use standard MySQL replication.</p>
<h2 id="aurora-endpoints">Aurora Endpoints</h2>
<p>Another important concept to understand is <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Overview.Endpoints.html" target="_blank" rel="noopener noreffer ">Aurora endpoints</a>.  Each cluster (in each region) has two default endpoints, a writer and a reader.  The writer points to the currently primary writer instance and the reader points to all the reader instance(s) as you might expect.  These endpoints are how your client would connect to the Aurora cluster and they automatically follow when instance roles changes, for example if Writer instance failed over to another in-region.</p>
<p>Each instance in the cluster also have their own direct endpoints, but use of these is not recommended since instance roles can change automatically.</p>
<p>In global clusters, endpoints still exist for each regional cluster.  There is no concept of a global endpoint.  Whichever cluster is the Primary has it&rsquo;s Writer endpoint active.  Secondary cluster&rsquo;s have inactive Writer endpoints.  To be specific, the endpoint on a secondary cluster has the <em>Inactive</em> status and the name cannot be resolved in DNS.</p>
<figure><figcaption>
            <p>The writer endpoint is inactive in this secondary cluster</p>
        </figcaption>
</figure>

<p>Ergo, the application must be aware of the endpoints in it&rsquo;s deployment region.  If the application is active in the non-primary Aurora region, it must somehow be aware of the endpoint in the Primary region or else not allow writes to the Aurora cluster.  To be fair, there is an Aurora feature for <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-write-forwarding.html" target="_blank" rel="noopener noreffer ">Global Database Write forwarding</a> that I have not experimented much with yet.</p>
<h2 id="planned-failover-aka-switchover">Planned Failover (aka Switchover)</h2>
<p>Now that we have our shiny global cluster, let&rsquo;s test failover!  AWS calls this <em>planned failover</em>, though hopefully there isn&rsquo;t much failure involved. Our goal is to safely change which cluster is primary without any dataloss and (hopefully) not a lot of application downtime.</p>
<p>This action can be taken from the AWS console with the &lsquo;Fail over global database&rsquo; action on the Global database object, or else via the AWS rds CLI.  Anyone who has done mysql primary switchovers ever should be familiar with the basic steps here:</p>
<ol>
<li>Set the old primary read-only</li>
<li>Wait for replication to catch up</li>
<li>Set the new primary read-write</li>
</ol>
<p>Aurora is no exception, but there are a few additional steps.  Because the new primary cluster&rsquo;s writer endpoint is Inactive, it must be made active.</p>
<p>To test this, I connect a <code>sysbench</code> client to my primary cluster&rsquo;s endpoint.  Because there is no global endpoint, I have to pay attention to when the secondary cluster&rsquo;s endpoint becomes available in DNS so I can reconnect my client to it instead.  However, I have discovered that</p>
<p>Here is a representative sample of the timings of my operations:</p>
<table>
<thead>
<tr>
<th>Time</th>
<th>Action / Event</th>
</tr>
</thead>
<tbody>
<tr>
<td>00:00</td>
<td>Failover started</td>
</tr>
<tr>
<td>02:19</td>
<td>Writes cease in primary</td>
</tr>
<tr>
<td>02:38</td>
<td>Reads case on primary endpoint</td>
</tr>
<tr>
<td>05:05</td>
<td>Writes start on new primary cluster&rsquo;s <em>instance</em> endpoint</td>
</tr>
<tr>
<td>14:19</td>
<td>The writer endpoint resolves in DNS</td>
</tr>
</tbody>
</table>
<p>From these timings, we can see clearly that the global failover operation is really supposed to finish around the 5 minute mark (after approximately 3 minutes of write downtime).  Around this time, I can see the AWS console indicating that the new primary cluster&rsquo;s writer endpoint indicates it is in the <em>Available</em> state, yet it does not resolve in DNS.</p>
<p>I have tested this many times, and to be fair it is not always this slow.  I have observed the writer endpoint resolving in DNS much sooner than it did in my example here.  I believe this is an AWS <em>bug</em> and AWS claims they will be fixing it soon.</p>
<div class="details admonition bug open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-bug fa-fw" aria-hidden="true"></i>Bug<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">In my testing (as of December 2022) write downtime can currently take up to <strong>15 minutes</strong>.</div>
        </div>
    </div>
<div class="details admonition warning open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-exclamation-triangle fa-fw" aria-hidden="true"></i>Warning<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">Even when the above DNS propogation bug is fixed (assuming that&rsquo;s what it is), I expect that the best that can be expected for writer downtime will be approximately <strong>3-5 minutes</strong>.</div>
        </div>
    </div>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>Tip<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">Anyone who needs to run routine DR testing on Aurora Global clusters will want to strongly consider doing so off-peak hours</div>
        </div>
    </div>
<h2 id="unplanned-failover">Unplanned Failover</h2>
<p><a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-disaster-recovery.html#aurora-global-database-failover" target="_blank" rel="noopener noreffer ">Amazon&rsquo;s unplanned failover documentation</a> is pretty interesting in the sense that they explicitly tell you <em>not to use the failover button</em> that you use for Planned failovers.  Instead the steps can be summarized as such:</p>
<ol>
<li>Stop writing to your primary db (assuming their primary region is available enough that you can reach your application).</li>
<li>Pick your target cluster to failover to</li>
<li>Remove the target cluster from the global database</li>
<li>Start writing to the new target cluster.</li>
</ol>
<p>Step 3 effectively splits the target cluster such that you now have two database clusters.  Depending on the severity of the AWS region outage, you may or may not be able to do any of the following:</p>
<ul>
<li>See if your primary cluster is up at all and taking writes</li>
<li>Take some kind of action to ensure said primary cluster is not taking writes any more</li>
<li>Execute any kind of reasonable STONITH/fencing procedures.</li>
</ul>
<p>Based on the fact that AWS recommends against using it, it also that the &ldquo;Failover&rdquo; action for global databases is not trustworthy enough to even attempt to execute in the event of a primary region failure and so you have to take an alternative process in the event of a true failure.  Personally, I&rsquo;d prefer if something at least <em>tried</em> to execute the proper failover steps in case the outage is intermittent enough to occasionally be able to reach the region/cluster experiencing the problem.</p>
<p>As far as the observed time to execute an Unplanned failover, detaching the secondary cluster is a relatively fast operation.  In that situation, nothing is setting the primary cluster read-only nor waiting for replication lag to catch up (at least in the sense that it can confirm all writes from the old primary have made it to the new).  However, the same DNS propogation issue exists in this scenario that will delay the availability of the writer endpoint.  Therefore, once this process is executed, I estimate it takes around 2-14 minutes or 2-4 minutes once the bug is fixed.</p>
<h2 id="what-aws-states-about-failover">What AWS states about Failover</h2>
<p>In short, the manual seems to acknowledge that &ldquo;minutes&rdquo; is to be expected:</p>
<div class="details admonition quote open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-quote-right fa-fw" aria-hidden="true"></i>Quote<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">For an Aurora global database, RTO can be in the order of minutes.
<a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-disaster-recovery.html#aurora-global-database-failover" target="_blank" rel="noopener noreffer ">source</a></div>
        </div>
    </div>
<p>While related marketing content seems to paint a rosier picture:
<div class="details admonition quote open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-quote-right fa-fw" aria-hidden="true"></i>Quote<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">If your primary Region suffers a performance degradation or outage, you can promote one of the secondary Regions to take read/write responsibilities. An Aurora cluster can recover in less than 1 minute even in the event of a complete Regional outage. This provides your application with an effective Recovery Point Objective (RPO) of 1 second and a Recovery Time Objective (RTO) of less than 1 minute, providing a strong foundation for a global business continuity plan.
<a href="https://aws.amazon.com/rds/aurora/global-database/" target="_blank" rel="noopener noreffer ">source</a></div>
        </div>
    </div></p>
<p>If you find any other public statements, I&rsquo;d be happy to hear about them!</p>
]]></description></item><item><title>Back in the Saddle</title><link>http://blog.jayjanssen.net/posts/2022/11/back-in-the-saddle/</link><pubDate>Tue, 01 Nov 2022 07:48:28 -0400</pubDate><author>Jay Janssen</author><guid>http://blog.jayjanssen.net/posts/2022/11/back-in-the-saddle/</guid><description><![CDATA[<p>After a long haiatus, I am back in the world of MySQL and infrastructure.  I spent over 10 years at Percona, first as a <em>MySQL Consultant</em>, then as a manager, then as an IT <em>doer of things</em>, finally as the Director of IT.  Earlier this year I made the decision to return to an individual contributor role at a new (to me) company, <a href="https://block.xyz" target="_blank" rel="noopener noreffer ">Block</a>, or more specifically, <a href="https://squareup.com" target="_blank" rel="noopener noreffer ">Square</a>.</p>


<center>

</center>


<h2 id="what-im-doing-now">What I&rsquo;m doing now</h2>
<p>No doubt some old-timers will remember my <a href="https://www.percona.com/blog/author/jay-janssen/" target="_blank" rel="noopener noreffer ">blogs at Percona, mostly about PXC and Galera</a>.  I&rsquo;m still interested in cluster tech, but now I&rsquo;m working with <a href="https://dev.mysql.com/doc/refman/8.0/en/mysql-innodb-cluster-introduction.html" target="_blank" rel="noopener noreffer ">MySQL Innodb Cluster</a>.  This is pretty similar to Galera architecturally.  It&rsquo;s a (mostly) synchronous, shared-nothing, Innodb-based cluster.  An extra fun dimension here is deploying this at a large scale on AWS.</p>
<p>Because I&rsquo;ve been removed from the MySQL ecosystem for so long (despite working at Percona), it&rsquo;s been fun to catch up on all that&rsquo;s new from MySQL community, including:</p>
<ul>
<li>MySQL 8.0 (I last used 5.6 seriously)</li>
<li>MySQL shell and the AdminAPI</li>
<li>MySQL router</li>
<li>Innodb Cluster itself</li>
</ul>
<p>On the infrastructure side, I&rsquo;ve been delving deeper into:</p>
<ul>
<li>AWS</li>
<li>Autoscaling groups</li>
<li>Terraform</li>
<li>Golang</li>
</ul>
<p>I&rsquo;m hoping to restart my technical blogging as I am learning more about all these topics and to even make it back to a conference or two in the future.</p>
]]></description></item></channel></rss>